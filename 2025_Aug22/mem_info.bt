#!/usr/bin/env bpftrace

// Track per-process memory changes
/* You cannot create your own structures in bpftrace.
   Use structs to mimic the C (kernel-datastructure) structs
   that you can type-cast and use.

struct mem_info_t {
 u64 last_vm_size;
 u64 growth_count;
 u64 total_growth;
};
*/
// BPF_HASH(process_mem, u32, struct mem_info_t);

tracepoint:sched:sched_process_exec {
	$pid = args->pid;
	@process_mem[$pid, last_vm_size] = 0;
	@process_mem[$pid, growth_count] = 0;
	@process_mem[$pid, total_growth] = 0;
}

tracepoint:sched:sched_process_exit {
 $pid = args->pid;

 if (@process_mem[$pid]) {
   $info = @process_mem[$pid];
   printf("PID %d exited: %d growth events, avg: %d KB\n",
   $pid, $info->growth_count,
   $info->growth_count > 0 ?
   $info->total_growth / $info->growth_count : 0);
   delete(@process_mem, $pid);
 }
}
